import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { Col, Container, Row } from 'react-bootstrap'
import "bootstrap/dist/css/bootstrap.min.css";
import { ItemTypes, itemTypesAsArray } from '@/pages/types/ItemTypes'
import ItemComponent from '@/pages/components/Item'
import { useEffect, useRef, useState } from 'react'
import { Item } from '@/pages/types/Item'
import { Items } from '@/pages/types/Items'

const initialInventory: Record<ItemTypes, Item> = itemTypesAsArray.reduce((final, item) => {
  return { ...final, [item]: new Items[item](0) };
}, {} as Record<ItemTypes, Item>);

function loadInventory() {
  const value = localStorage.getItem("epic-rpg-inventory");
  if (value === null) {
    return initialInventory;
  };
  const parsed = JSON.parse(value);
  return itemTypesAsArray.reduce((final, item) => {
    return { ...final, [item]: new Items[item](parsed[item].amount) };
  }, {} as Record<ItemTypes, Item>);
}

function saveInventory(inventory: Record<ItemTypes, Item>) {
  const value = JSON.stringify(inventory);
  localStorage.setItem("epic-rpg-inventory", value);
}

export default function Home() {
  const [inventory, setInventory] =
    useState<Record<ItemTypes, Item>>(initialInventory);

  useEffect(() => {
    const savedInventroy = loadInventory();
    setInventory(savedInventroy);
  }, []);

  const updateInventory = (item: Item) => {
    const newInventary = { ...inventory, [item.name]: item };
    setInventory(newInventary);
    saveInventory(newInventary);
  }

  const hyperLogsQ = (Object.keys(inventory) as ItemTypes[]).reduce((total, itemName) => {
    return total + inventory[itemName].toHyperLogs().amount;
  }, 0);

  return (
    <>
      <Head>
        <title>Epic RPG Tools</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className={styles.title}>Epic RPG Tools</h1>
        <Container>
          <Row>
            <Col>
              <Row>
                <Col className="header">Item</Col>
                <Col className="header">Cantidad</Col>
              </Row>
              {itemTypesAsArray.map((name, index) => (
                <ItemComponent
                  key={`item-${index}`}
                  item={inventory[name]}
                  onChange={updateInventory}
                />
              ))}
            </Col>
            <Col>
              <Container>
                <Row>
                  <span>Item:</span>
                  <p>El nombre del item</p>
                </Row>
                <Row>
                  <span>Cantidad:</span>
                  <p>La cantidad de ese item que tienen en el inventario</p>
                </Row>
                <Row>
                  <h2>Conversiones</h2>
                  <Container>
                    <Row>
                      <Col>
                        <span>HyperLogs:</span> {hyperLogsQ}
                      </Col>
                    </Row>
                  </Container>
                </Row>
              </Container>
            </Col>
          </Row>
        </Container>
      </main>
    </>
  );
}
